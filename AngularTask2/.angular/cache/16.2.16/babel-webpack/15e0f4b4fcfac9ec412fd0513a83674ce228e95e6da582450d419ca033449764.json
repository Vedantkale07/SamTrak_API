{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction AppComponent_div_7_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", ctx_r1.inputNumber, \" x \", row_r2, \" = \", ctx_r1.inputNumber * row_r2, \" \");\n  }\n}\nfunction AppComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, AppComponent_div_7_li_4_Template, 2, 3, \"li\", 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Table of \", ctx_r0.inputNumber, \":\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.tableData);\n  }\n}\nexport class AppComponent {\n  constructor() {\n    // title = 'AngularTask2';\n    this.inputNumber = 0;\n    this.tableLimit = 10; // Default table limit\n    this.tableData = [];\n  }\n  generateTable() {\n    this.tableData = [];\n    for (let i = 1; i <= this.tableLimit; i++) {\n      this.tableData.push(i);\n    }\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 8,\n      vars: 3,\n      consts: [[2, \"text-align\", \"center\"], [\"type\", \"number\", \"placeholder\", \"Enter a number\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"placeholder\", \"Enter table limit\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"div\", 0);\n          i0.ɵɵelementStart(1, \"h1\");\n          i0.ɵɵtext(2, \"Multiplication Table Generator\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"input\", 1);\n          i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_3_listener($event) {\n            return ctx.inputNumber = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_4_listener($event) {\n            return ctx.tableLimit = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_5_listener() {\n            return ctx.generateTable();\n          });\n          i0.ɵɵtext(6, \"Generate Table\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(7, AppComponent_div_7_Template, 5, 2, \"div\", 4);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.inputNumber);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngModel\", ctx.tableLimit);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.tableData.length);\n        }\n      },\n      dependencies: [i1.NgForOf, i1.NgIf, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgModel],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate3","ctx_r1","inputNumber","row_r2","ɵɵtemplate","AppComponent_div_7_li_4_Template","ɵɵtextInterpolate1","ctx_r0","ɵɵproperty","tableData","AppComponent","constructor","tableLimit","generateTable","i","push","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","AppComponent_Template_input_ngModelChange_3_listener","$event","AppComponent_Template_input_ngModelChange_4_listener","AppComponent_Template_button_click_5_listener","AppComponent_div_7_Template","length"],"sources":["C:\\Users\\vedan\\Angular Project Demos\\AngularTask2\\src\\app\\app.component.ts","C:\\Users\\vedan\\Angular Project Demos\\AngularTask2\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  // title = 'AngularTask2';\n    inputNumber: number = 0;\n    tableLimit: number = 10;  // Default table limit\n    tableData: number[] = [];\n\n    generateTable(): void {\n      this.tableData = [];\n      for (let i = 1; i <= this.tableLimit; i++) {\n        this.tableData.push(i);\n      }\n    }\n}\n\n\n","<div style=\"text-align:center\"></div>\n  <h1>Multiplication Table Generator</h1>\n  <input type=\"number\" [(ngModel)]=\"inputNumber\" placeholder=\"Enter a number\" />\n  <input type=\"number\" [(ngModel)]=\"tableLimit\" placeholder=\"Enter table limit\" />\n  <button (click)=\"generateTable()\">Generate Table</button>\n\n  <div *ngIf=\"tableData.length\">\n    <h2>Table of {{ inputNumber }}:</h2>\n    <ul>\n      <li *ngFor=\"let row of tableData\">\n        {{ inputNumber }} x {{ row }} = {{ inputNumber * row }}\n      </li>\n    </ul>\n  </div>\n"],"mappings":";;;;;ICSMA,EAAA,CAAAC,cAAA,SAAkC;IAChCD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;;IADHH,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,WAAA,SAAAC,MAAA,SAAAF,MAAA,CAAAC,WAAA,GAAAC,MAAA,MACF;;;;;IALJR,EAAA,CAAAC,cAAA,UAA8B;IACxBD,EAAA,CAAAE,MAAA,GAA2B;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACpCH,EAAA,CAAAC,cAAA,SAAI;IACFD,EAAA,CAAAS,UAAA,IAAAC,gCAAA,gBAEK;IACPV,EAAA,CAAAG,YAAA,EAAK;;;;IALDH,EAAA,CAAAI,SAAA,GAA2B;IAA3BJ,EAAA,CAAAW,kBAAA,cAAAC,MAAA,CAAAL,WAAA,MAA2B;IAETP,EAAA,CAAAI,SAAA,GAAY;IAAZJ,EAAA,CAAAa,UAAA,YAAAD,MAAA,CAAAE,SAAA,CAAY;;;ADFtC,OAAM,MAAOC,YAAY;EALzBC,YAAA;IAME;IACE,KAAAT,WAAW,GAAW,CAAC;IACvB,KAAAU,UAAU,GAAW,EAAE,CAAC,CAAE;IAC1B,KAAAH,SAAS,GAAa,EAAE;;EAExBI,aAAaA,CAAA;IACX,IAAI,CAACJ,SAAS,GAAG,EAAE;IACnB,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAACF,UAAU,EAAEE,CAAC,EAAE,EAAE;MACzC,IAAI,CAACL,SAAS,CAACM,IAAI,CAACD,CAAC,CAAC;;EAE1B;;;uBAXSJ,YAAY;IAAA;EAAA;;;YAAZA,YAAY;MAAAM,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCPzB3B,EAAA,CAAA6B,SAAA,aAAqC;UACnC7B,EAAA,CAAAC,cAAA,SAAI;UAAAD,EAAA,CAAAE,MAAA,qCAA8B;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACvCH,EAAA,CAAAC,cAAA,eAA8E;UAAzDD,EAAA,CAAA8B,UAAA,2BAAAC,qDAAAC,MAAA;YAAA,OAAAJ,GAAA,CAAArB,WAAA,GAAAyB,MAAA;UAAA,EAAyB;UAA9ChC,EAAA,CAAAG,YAAA,EAA8E;UAC9EH,EAAA,CAAAC,cAAA,eAAgF;UAA3DD,EAAA,CAAA8B,UAAA,2BAAAG,qDAAAD,MAAA;YAAA,OAAAJ,GAAA,CAAAX,UAAA,GAAAe,MAAA;UAAA,EAAwB;UAA7ChC,EAAA,CAAAG,YAAA,EAAgF;UAChFH,EAAA,CAAAC,cAAA,gBAAkC;UAA1BD,EAAA,CAAA8B,UAAA,mBAAAI,8CAAA;YAAA,OAASN,GAAA,CAAAV,aAAA,EAAe;UAAA,EAAC;UAAClB,EAAA,CAAAE,MAAA,qBAAc;UAAAF,EAAA,CAAAG,YAAA,EAAS;UAEzDH,EAAA,CAAAS,UAAA,IAAA0B,2BAAA,iBAOM;;;UAXenC,EAAA,CAAAI,SAAA,GAAyB;UAAzBJ,EAAA,CAAAa,UAAA,YAAAe,GAAA,CAAArB,WAAA,CAAyB;UACzBP,EAAA,CAAAI,SAAA,GAAwB;UAAxBJ,EAAA,CAAAa,UAAA,YAAAe,GAAA,CAAAX,UAAA,CAAwB;UAGvCjB,EAAA,CAAAI,SAAA,GAAsB;UAAtBJ,EAAA,CAAAa,UAAA,SAAAe,GAAA,CAAAd,SAAA,CAAAsB,MAAA,CAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}