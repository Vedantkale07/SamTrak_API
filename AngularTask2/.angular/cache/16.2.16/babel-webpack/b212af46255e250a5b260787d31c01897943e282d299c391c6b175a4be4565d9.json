{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction AppComponent_div_6_div_1_tr_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r4 = ctx.$implicit;\n    const table_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\"\", table_r2.number, \" x \", row_r4, \" = \", table_r2.number * row_r4, \"\");\n  }\n}\nfunction AppComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"table\", 5);\n    i0.ɵɵtemplate(4, AppComponent_div_6_div_1_tr_4_Template, 3, 3, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const table_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Multiplication Table for \", table_r2.number, \":\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", table_r2.data);\n  }\n}\nfunction AppComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AppComponent_div_6_div_1_Template, 5, 2, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.tables);\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.limit = 1; // The maximum number for which the tables will be generated\n    this.tables = []; // Array to store all tables\n  }\n  // Method to generate tables for numbers from 1 up to 'limit'\n  generateTables() {\n    this.tables = []; // Reset tables array\n    for (let i = 1; i <= this.limit; i++) {\n      const tableData = [];\n      for (let j = 1; j <= 10; j++) {\n        // Generate up to 10 multiples by default\n        tableData.push(j);\n      }\n      this.tables.push({\n        number: i,\n        data: tableData\n      });\n    }\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 7,\n      vars: 2,\n      consts: [[2, \"text-align\", \"center\"], [\"type\", \"number\", \"placeholder\", \"Generate tables up to...\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"border\", \"1\", 2, \"margin\", \"auto\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n          i0.ɵɵtext(2, \"Multiplication Table Generator\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"input\", 1);\n          i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_3_listener($event) {\n            return ctx.limit = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_4_listener() {\n            return ctx.generateTables();\n          });\n          i0.ɵɵtext(5, \"Generate Tables\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(6, AppComponent_div_6_Template, 2, 1, \"div\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.limit);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.tables.length);\n        }\n      },\n      dependencies: [i1.NgForOf, i1.NgIf, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgModel],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate3","table_r2","number","row_r4","ɵɵtemplate","AppComponent_div_6_div_1_tr_4_Template","ɵɵtextInterpolate1","ɵɵproperty","data","AppComponent_div_6_div_1_Template","ctx_r0","tables","AppComponent","constructor","limit","generateTables","i","tableData","j","push","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵlistener","AppComponent_Template_input_ngModelChange_3_listener","$event","AppComponent_Template_button_click_4_listener","AppComponent_div_6_Template","length"],"sources":["C:\\Users\\vedan\\Angular Project Demos\\AngularTask2\\src\\app\\app.component.ts","C:\\Users\\vedan\\Angular Project Demos\\AngularTask2\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  limit: number = 1;        // The maximum number for which the tables will be generated\n  tables: { number: number, data: number[] }[] = [];  // Array to store all tables\n\n  // Method to generate tables for numbers from 1 up to 'limit'\n  generateTables(): void {\n    this.tables = [];  // Reset tables array\n    for (let i = 1; i <= this.limit; i++) {\n      const tableData = [];\n      for (let j = 1; j <= 10; j++) {  // Generate up to 10 multiples by default\n        tableData.push(j);\n      }\n      this.tables.push({ number: i, data: tableData });\n    }\n  }\n}\n\n\n","<div style=\"text-align:center\">\n  <h1>Multiplication Table Generator</h1>\n  <input type=\"number\" [(ngModel)]=\"limit\" placeholder=\"Generate tables up to...\" />\n  <button (click)=\"generateTables()\">Generate Tables</button>\n\n  <div *ngIf=\"tables.length\">\n    <div *ngFor=\"let table of tables\">\n      <h2>Multiplication Table for {{ table.number }}:</h2>\n      <table border=\"1\" style=\"margin: auto;\">\n        <tr *ngFor=\"let row of table.data\">\n          <td>{{ table.number }} x {{ row }} = {{ table.number * row }}</td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}